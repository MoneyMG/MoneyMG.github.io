{"title":"Commentary Visuals","markdown":{"yaml":{"title":"Commentary Visuals","format":"html","editor":"visual"},"headingText":"Sector Risk","containsRefs":false,"markdown":"\n\n```{r}\n#| echo: false\n\n\nausTheme_base <- function() {\n  ggplot2::theme(\n    panel.background = element_rect(fill = 'white'),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.major.y = element_line(colour = 'lightgrey'),\n    panel.grid.minor.y = element_line(colour = 'lightgrey'),\n    axis.ticks.y = element_blank(),\n    axis.ticks.x = element_line('lightgrey')\n    \n  )\n}\n```\n\n```{r}\n#| echo: false\n#| output: false\n\n\nlibrary(dplyr)\nlibrary(tidyquant)\nlibrary(tidyr)\nlibrary(ggplot2)\n```\n\nI work with smart people. Their time is better spent either communicating our strategies or developing products. Below is a sample of what I have done to aid in that goal. This R script connects to the back-end of a internal tool currently being improved and maintained by [Calum Sieppert](https://github.com/rynoV). For security reasons I have excluded the visuals that use the tool.\n\n```{r}\n#| echo: false\n#| warning: false\n\ndata <- tidyquant::tq_get(x = \"CPIAUCSL\" ,\n                          get = \"economic.data\",\n                          from = \"2019-01-01\") %>%\n  dplyr::rename(., Series = price, Date = date) %>%\n  dplyr::mutate(.,\n                YOY = ((Series - lag(Series, n = 12)) / lag(Series, n = 12)) * 100) %>%\n  dplyr::transmute(., Date, Series, YOY)\n\n\n```\n\n```{r, CPI CHART}\n#| echo: false\n#| warning: false\n\n\nCPIvis <- data %>%\n  dplyr::filter(., Date >= '2020-04-01')\n\nmin <- min(CPIvis$Date)\nmax <- max(CPIvis$Date)\n\ncpi <- data %>% ggplot(aes(x = Date, y = YOY)) + \n  geom_line(col = '#f5a800', size = 1.25) + \n  scale_y_continuous(\n    breaks = c(0:10),\n    minor_breaks = c(0:10),\n    labels = scales::number_format(accuracy = 0.1),\n    limits = c(0.0, 10.0),\n    expand = c(0,0)\n                     ) + \n  scale_x_date(\n    breaks = '4 months',\n    date_labels = '%Y-%m', \n    limits = c(min, max), \n    expand = c(0,10)\n    ) +\n  ausTheme_base() +\n  labs(\n    title = 'CONSUMER PRICE INDEX (CPI) YOY% CHANGE',\n    y = '',\n    x = ''\n  )\n\ncpi %>% \n  plotly::ggplotly() %>% \n  plotly::style(\n    hoverinfo = 'text',\n    hovertext = paste('YoY% :', round(CPIvis$YOY, 2),\n                      '<br>Date :', CPIvis$Date)\n    \n    )\n  \n  \n```\n\nI am currently working on creating downloadable HTML versions of the each [fund's](https://www.auspicecapital.com/resources#p2) commentary with intractability. Ultimately the goal is to have one touch point (i.e. the written component) firm side and increase the end users utility out of the commentary.\n\n::: panel-tabset\n\n```{r, scrape for sector risk}\n#| echo: false\n#| warning: false\n#| output: false\n\n\nlibrary(RSelenium)\nrD <- rsDriver(browser = 'firefox', chromever = NULL)\nremDR <- rD[['client']]\n\nremDR$navigate('https://www.auspicecapital.com/auspice-diversified-trust')\n\nSys.sleep(2)\n\npage <- remDR$getPageSource()\n\nSys.sleep(2)\n\nrvest::read_html(page[[1]]) %>% \n  rvest::html_elements(css = 'table') %>%\n  rvest::html_table()\n\nttinvestments <- rvest::read_html(page[[1]]) %>% \n  rvest::html_elements(css = 'table') %>% \n  .[[1]] %>% \n  rvest::html_element(css = 'tbody') %>%\n  rvest::html_table()\n\nttrisk <- rvest::read_html(page[[1]]) %>% \n  rvest::html_elements(css = 'table') %>% \n  .[[2]] %>% \n  rvest::html_element(css = 'tbody') %>%\n  rvest::html_table()\n\nttrisksector <- rvest::read_html(page[[1]]) %>% \n  rvest::html_elements(css = 'table') %>% \n  .[[3]] %>% \n  rvest::html_element(css = 'tbody') %>%\n  rvest::html_table()\n\nhistoric <- rvest::read_html(page[[1]]) %>% \n  rvest::html_elements(css = 'table') %>%\n  .[[4]] %>% \n  rvest::html_table()\n\nseriesperf <- rvest::read_html(page[[1]]) %>% \n  rvest::html_elements(css = 'table') %>%\n  .[[5]] %>% \n  rvest::html_table()\n\nseriesdailynav <- rvest::read_html(page[[1]]) %>% \n  rvest::html_elements(css = 'table') %>%\n  .[[6]] %>% \n  rvest::html_table()\n\nremDR$close()\nrD[['server']]$stop()\n\n\n```\n\n```{r, Current Sector Risk}\n#| echo: false\n#| warning: false\n\n\nlibrary(ggplot2)\n\nrisksector <- ttrisksector %>%\n  dplyr::mutate(\n    int = stringr::str_replace_all(X2, '%', ''),\n    porp.port = as.numeric(int),\n    percentage = porp.port / sum(porp.port),\n    clean = stringr::str_replace_all(X1, ' and ', ' & '),\n    Sector = toupper(clean)) %>% \n  dplyr::select(Sector, percentage) %>%\n  dplyr::mutate(color = ifelse(Sector %in% c(\"ENERGIES\", \"GRAINS\", \"METALS\", \"SOFTS\", \"MEATS\"), '#f5a800', '#081F2D'))\n\n\ncorrectorder <- c(\"ENERGIES\", \"GRAINS\", \"METALS\", \"SOFTS\" , \"MEATS\", \"CURRENCIES\", \"EQUITIES\", \"RATES\")\n\nrisksector$Sector <- factor(risksector$Sector, levels = correctorder)\n\nrisksector <- dplyr::arrange(risksector, Sector)\n\nriskvis <- risksector %>% ggplot() + \n  geom_col(aes(x = Sector, y = percentage, fill = color), width = 0.4, position = position_dodge(width = 0.5)) +\n  scale_fill_identity() +\n  scale_y_continuous(\n    labels = scales::percent_format(accuracy = 1), \n    limits = c(0, 0.35),\n    breaks = seq(0, 0.35, by = 0.05),\n    minor_breaks = NULL) +\n  theme(\n    text = element_text(family = 'sans-serif'),\n    panel.background = element_rect(fill = 'white'),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.major.y = element_line(colour = 'lightgrey'),\n    panel.grid.minor.y = element_line(colour = 'lightgrey'),\n    axis.ticks.y = element_blank(),\n    axis.ticks.x = element_blank(),\n    axis.text.x = element_text(angle = 90, size = 12, color = '#424242', vjust = 0.5, hjust = 1),\n    axis.text.y = element_text(size = 10, colour = '#424242')\n    \n  ) +\n  labs(\n    x = '',\n    y = ''\n  )\n  \nriskvis %>% \n  plotly::ggplotly() %>% \n  plotly::style(\n    showlegend = FALSE,\n    hoverinfo = 'y',\n    hovertemplate = \"%{y:.2%} of Portfolio\"\n)\n```\n\n## Monthly Performance\n\n```{r}\n#| echo: false\n\nhistoric %>% \n  as_tibble() %>%\n  slice(1:18) %>% \n  kableExtra::kbl() %>% \n  kableExtra::kable_styling(bootstrap_options = c('striped', 'hover'), full_width = F, position = 'center') %>%\n  kableExtra::row_spec(0, color = 'white', background = '#081F2D') %>% \n  kableExtra::column_spec(2:13, background = '#f5a800', include_thead = T) %>% \n  kableExtra::column_spec(2:13, background = 'inherit') %>%\n  kableExtra::column_spec(2:13, include_thead = T, border_left = '2px solid white', border_right = '2px solid white') %>% \n  kableExtra::column_spec(1, bold = T) %>% \n  kableExtra::column_spec(14, bold = T)\n  \n  \n```\n:::\n","srcMarkdownNoYaml":"\n\n```{r}\n#| echo: false\n\n\nausTheme_base <- function() {\n  ggplot2::theme(\n    panel.background = element_rect(fill = 'white'),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.major.y = element_line(colour = 'lightgrey'),\n    panel.grid.minor.y = element_line(colour = 'lightgrey'),\n    axis.ticks.y = element_blank(),\n    axis.ticks.x = element_line('lightgrey')\n    \n  )\n}\n```\n\n```{r}\n#| echo: false\n#| output: false\n\n\nlibrary(dplyr)\nlibrary(tidyquant)\nlibrary(tidyr)\nlibrary(ggplot2)\n```\n\nI work with smart people. Their time is better spent either communicating our strategies or developing products. Below is a sample of what I have done to aid in that goal. This R script connects to the back-end of a internal tool currently being improved and maintained by [Calum Sieppert](https://github.com/rynoV). For security reasons I have excluded the visuals that use the tool.\n\n```{r}\n#| echo: false\n#| warning: false\n\ndata <- tidyquant::tq_get(x = \"CPIAUCSL\" ,\n                          get = \"economic.data\",\n                          from = \"2019-01-01\") %>%\n  dplyr::rename(., Series = price, Date = date) %>%\n  dplyr::mutate(.,\n                YOY = ((Series - lag(Series, n = 12)) / lag(Series, n = 12)) * 100) %>%\n  dplyr::transmute(., Date, Series, YOY)\n\n\n```\n\n```{r, CPI CHART}\n#| echo: false\n#| warning: false\n\n\nCPIvis <- data %>%\n  dplyr::filter(., Date >= '2020-04-01')\n\nmin <- min(CPIvis$Date)\nmax <- max(CPIvis$Date)\n\ncpi <- data %>% ggplot(aes(x = Date, y = YOY)) + \n  geom_line(col = '#f5a800', size = 1.25) + \n  scale_y_continuous(\n    breaks = c(0:10),\n    minor_breaks = c(0:10),\n    labels = scales::number_format(accuracy = 0.1),\n    limits = c(0.0, 10.0),\n    expand = c(0,0)\n                     ) + \n  scale_x_date(\n    breaks = '4 months',\n    date_labels = '%Y-%m', \n    limits = c(min, max), \n    expand = c(0,10)\n    ) +\n  ausTheme_base() +\n  labs(\n    title = 'CONSUMER PRICE INDEX (CPI) YOY% CHANGE',\n    y = '',\n    x = ''\n  )\n\ncpi %>% \n  plotly::ggplotly() %>% \n  plotly::style(\n    hoverinfo = 'text',\n    hovertext = paste('YoY% :', round(CPIvis$YOY, 2),\n                      '<br>Date :', CPIvis$Date)\n    \n    )\n  \n  \n```\n\nI am currently working on creating downloadable HTML versions of the each [fund's](https://www.auspicecapital.com/resources#p2) commentary with intractability. Ultimately the goal is to have one touch point (i.e. the written component) firm side and increase the end users utility out of the commentary.\n\n::: panel-tabset\n## Sector Risk\n\n```{r, scrape for sector risk}\n#| echo: false\n#| warning: false\n#| output: false\n\n\nlibrary(RSelenium)\nrD <- rsDriver(browser = 'firefox', chromever = NULL)\nremDR <- rD[['client']]\n\nremDR$navigate('https://www.auspicecapital.com/auspice-diversified-trust')\n\nSys.sleep(2)\n\npage <- remDR$getPageSource()\n\nSys.sleep(2)\n\nrvest::read_html(page[[1]]) %>% \n  rvest::html_elements(css = 'table') %>%\n  rvest::html_table()\n\nttinvestments <- rvest::read_html(page[[1]]) %>% \n  rvest::html_elements(css = 'table') %>% \n  .[[1]] %>% \n  rvest::html_element(css = 'tbody') %>%\n  rvest::html_table()\n\nttrisk <- rvest::read_html(page[[1]]) %>% \n  rvest::html_elements(css = 'table') %>% \n  .[[2]] %>% \n  rvest::html_element(css = 'tbody') %>%\n  rvest::html_table()\n\nttrisksector <- rvest::read_html(page[[1]]) %>% \n  rvest::html_elements(css = 'table') %>% \n  .[[3]] %>% \n  rvest::html_element(css = 'tbody') %>%\n  rvest::html_table()\n\nhistoric <- rvest::read_html(page[[1]]) %>% \n  rvest::html_elements(css = 'table') %>%\n  .[[4]] %>% \n  rvest::html_table()\n\nseriesperf <- rvest::read_html(page[[1]]) %>% \n  rvest::html_elements(css = 'table') %>%\n  .[[5]] %>% \n  rvest::html_table()\n\nseriesdailynav <- rvest::read_html(page[[1]]) %>% \n  rvest::html_elements(css = 'table') %>%\n  .[[6]] %>% \n  rvest::html_table()\n\nremDR$close()\nrD[['server']]$stop()\n\n\n```\n\n```{r, Current Sector Risk}\n#| echo: false\n#| warning: false\n\n\nlibrary(ggplot2)\n\nrisksector <- ttrisksector %>%\n  dplyr::mutate(\n    int = stringr::str_replace_all(X2, '%', ''),\n    porp.port = as.numeric(int),\n    percentage = porp.port / sum(porp.port),\n    clean = stringr::str_replace_all(X1, ' and ', ' & '),\n    Sector = toupper(clean)) %>% \n  dplyr::select(Sector, percentage) %>%\n  dplyr::mutate(color = ifelse(Sector %in% c(\"ENERGIES\", \"GRAINS\", \"METALS\", \"SOFTS\", \"MEATS\"), '#f5a800', '#081F2D'))\n\n\ncorrectorder <- c(\"ENERGIES\", \"GRAINS\", \"METALS\", \"SOFTS\" , \"MEATS\", \"CURRENCIES\", \"EQUITIES\", \"RATES\")\n\nrisksector$Sector <- factor(risksector$Sector, levels = correctorder)\n\nrisksector <- dplyr::arrange(risksector, Sector)\n\nriskvis <- risksector %>% ggplot() + \n  geom_col(aes(x = Sector, y = percentage, fill = color), width = 0.4, position = position_dodge(width = 0.5)) +\n  scale_fill_identity() +\n  scale_y_continuous(\n    labels = scales::percent_format(accuracy = 1), \n    limits = c(0, 0.35),\n    breaks = seq(0, 0.35, by = 0.05),\n    minor_breaks = NULL) +\n  theme(\n    text = element_text(family = 'sans-serif'),\n    panel.background = element_rect(fill = 'white'),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.major.y = element_line(colour = 'lightgrey'),\n    panel.grid.minor.y = element_line(colour = 'lightgrey'),\n    axis.ticks.y = element_blank(),\n    axis.ticks.x = element_blank(),\n    axis.text.x = element_text(angle = 90, size = 12, color = '#424242', vjust = 0.5, hjust = 1),\n    axis.text.y = element_text(size = 10, colour = '#424242')\n    \n  ) +\n  labs(\n    x = '',\n    y = ''\n  )\n  \nriskvis %>% \n  plotly::ggplotly() %>% \n  plotly::style(\n    showlegend = FALSE,\n    hoverinfo = 'y',\n    hovertemplate = \"%{y:.2%} of Portfolio\"\n)\n```\n\n## Monthly Performance\n\n```{r}\n#| echo: false\n\nhistoric %>% \n  as_tibble() %>%\n  slice(1:18) %>% \n  kableExtra::kbl() %>% \n  kableExtra::kable_styling(bootstrap_options = c('striped', 'hover'), full_width = F, position = 'center') %>%\n  kableExtra::row_spec(0, color = 'white', background = '#081F2D') %>% \n  kableExtra::column_spec(2:13, background = '#f5a800', include_thead = T) %>% \n  kableExtra::column_spec(2:13, background = 'inherit') %>%\n  kableExtra::column_spec(2:13, include_thead = T, border_left = '2px solid white', border_right = '2px solid white') %>% \n  kableExtra::column_spec(1, bold = T) %>% \n  kableExtra::column_spec(14, bold = T)\n  \n  \n```\n:::\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","embed-resources":true,"css":["styles.css"],"toc":false,"output-file":"Rmonthies.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.555","editor":"visual","theme":"simplex","title":"Commentary Visuals"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}